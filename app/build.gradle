apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
//apply plugin: 'io.fabric'
//apply plugin: 'com.google.firebase.appdistribution'
apply plugin: "com.cookpad.android.plugin.license-tools"

buildscript {
    repositories {
        google()
    }

//    dependencies {
//        classpath 'com.google.firebase:firebase-appdistribution-gradle:1.3.1'
//    }
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "ro.wethecitizens.firstcontact"
        resValue "string", "build_config_package", "ro.wethecitizens.firstcontact"
        minSdkVersion 22
        targetSdkVersion 29
        versionCode 2
        versionName "1.1.0"
        buildConfigField "String", "GITHASH", "\"${getGitHash()}\""
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

        buildConfigField "String", "STORE_URL", STORE_URL
        buildConfigField "String", "PRIVACY_URL", PRIVACY_URL

        buildConfigField "String", "BACKEND_URL", BACKEND_URL

        buildConfigField "String", "FIREBASE_REGION", FIREBASE_REGION

        buildConfigField "String", "ORG", ORG
        buildConfigField "int", "SERVICE_FOREGROUND_NOTIFICATION_ID", SERVICE_FOREGROUND_NOTIFICATION_ID
        buildConfigField "String", "SERVICE_FOREGROUND_CHANNEL_ID", SERVICE_FOREGROUND_CHANNEL_ID
        buildConfigField "String", "SERVICE_FOREGROUND_CHANNEL_NAME", SERVICE_FOREGROUND_CHANNEL_NAME

        buildConfigField "int", "PUSH_NOTIFICATION_ID", PUSH_NOTIFICATION_ID
        buildConfigField "String", "PUSH_NOTIFICATION_CHANNEL_NAME", PUSH_NOTIFICATION_CHANNEL_NAME

        buildConfigField "long", "SCAN_DURATION", SCAN_DURATION
        buildConfigField "long", "MIN_SCAN_INTERVAL", MIN_SCAN_INTERVAL
        buildConfigField "long", "MAX_SCAN_INTERVAL", MAX_SCAN_INTERVAL
        buildConfigField "long", "MAX_QUEUE_TIME", MAX_QUEUE_TIME
        buildConfigField "long", "BM_CHECK_INTERVAL", BM_CHECK_INTERVAL
        buildConfigField "long", "HEALTH_CHECK_INTERVAL", HEALTH_CHECK_INTERVAL
        buildConfigField "long", "PURGE_INTERVAL", PURGE_INTERVAL
        buildConfigField "long", "PURGE_TTL", PURGE_TTL
        buildConfigField "long", "CONNECTION_TIMEOUT", CONNECTION_TIMEOUT
        buildConfigField "long", "BLACKLIST_DURATION", BLACKLIST_DURATION

        buildConfigField "long", "ADVERTISING_DURATION", ADVERTISING_DURATION
        buildConfigField "long", "ADVERTISING_INTERVAL", ADVERTISING_INTERVAL

        buildConfigField "String", "V2_CHARACTERISTIC_ID", V2_CHARACTERISTIC_ID
    }

    buildTypes {
        debug {
            buildConfigField "String", "FIREBASE_UPLOAD_BUCKET", STAGING_FIREBASE_UPLOAD_BUCKET
            buildConfigField "String", "BLE_SSID", STAGING_SERVICE_UUID

            String ssid = STAGING_SERVICE_UUID
            versionNameSuffix "-debug-${getGitHash()}-${ssid.substring(ssid.length() - 5, ssid.length() - 1)}"
            resValue "string", "app_name", "First Contact Debug"
            applicationIdSuffix "stg"
        }

        release {

            buildConfigField "String", "FIREBASE_UPLOAD_BUCKET", PRODUCTION_FIREBASE_UPLOAD_BUCKET
            buildConfigField "String", "BLE_SSID", PRODUCTION_SERVICE_UUID

            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled false
            multiDexEnabled false
            zipAlignEnabled true
            resValue "string", "app_name", "First Contact"

            lintOptions {
                // Ignore lint errors for now
                abortOnError false
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }


    // Add for using latest experimental build of Android Extensions
    androidExtensions {
        experimental = true
    }

    // needed after adding retrofit + gson retrofit converter -- probably some conflict with firebase
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation group: 'androidx.localbroadcastmanager', name: 'localbroadcastmanager', version: '1.1.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.firebase:firebase-config-ktx:20.0.0'
    implementation 'com.google.firebase:firebase-analytics:18.0.0'
//    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
//    implementation 'com.google.firebase:firebase-storage:19.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.hbb20:ccp:2.3.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Room components
    def room_version = "2.2.3"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    implementation "com.google.android.material:material:1.3.0-alpha03"

    def archLifecycleVersion = "2.2.0"
    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$archLifecycleVersion"
    testImplementation "android.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.17'

//    implementation 'com.google.firebase:firebase-analytics:17.2.2'
//    implementation 'com.google.firebase:firebase-auth:19.2.0'
//    implementation 'com.google.firebase:firebase-functions:19.0.2'
//    implementation 'com.google.firebase:firebase-messaging:20.1.2'

    //bottom navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.1'

    //cardview
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.guava:guava:28.2-android'

    //Lottie
    implementation 'com.airbnb.android:lottie:3.4.0'

    // retrofit
    def retrofitVersion = "2.8.1"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // retrofit debugging
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'

    // qr code scanner
    implementation('com.journeyapps:zxing-android-embedded:4.1.0') { transitive = false }
    // For Android versions < 24, downgrade zxing:core to 3.3.0 or earlier for Android 14+ support: https://github.com/journeyapps/zxing-android-embedded#older-sdk-versions
    implementation 'com.google.zxing:core:3.3.0'

    // sms retrieve
    implementation 'com.google.android.gms:play-services-auth:18.1.0'
    implementation 'com.google.android.gms:play-services-auth-api-phone:17.5.0'

    // mockito testing
    testImplementation 'org.mockito:mockito-core:3.3.3'
}
